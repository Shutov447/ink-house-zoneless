@use 'fonts';
@use 'colors';
@use 'transitions';

@mixin button($color, $bgColor, $width: fit-content, $isRounded: false) {
    .button {
        color: $color;
        background-color: $bgColor;
        width: $width;
        transition:
            color transitions.$transition-lvl-1,
            background-color transitions.$transition-lvl-1;

        @if ($isRounded) {
            border-radius: 20px;
            padding: 10px 20px;
        } @else {
            padding: 20px 60px;
            border: 1px solid $color;
        }

        &:hover {
            color: $bgColor;
            background-color: $color;
            transition:
                color transitions.$transition-lvl-1,
                background-color transitions.$transition-lvl-1;
        }
    }
}

:host {
    @include fonts.font(1.25em);
    width: 100%;
    height: 100%;
}

.button {
    display: flex;
    justify-content: center;
    width: 100%;
    height: 100%;
}

:host(.--green-square-1) {
    @include button(colors.$Laurel, colors.$MintCream);
}
:host(.--green-square-1--w100) {
    @include button(colors.$Laurel, colors.$MintCream, 100%);
}

:host(.--green-square-2) {
    @include button(colors.$Laurel, colors.$LilyWhite);
}
:host(.--green-square-2--w100) {
    @include button(colors.$Laurel, colors.$LilyWhite, 100%);
}

:host(.--green-rounded) {
    @include button(colors.$HunterGreen, colors.$SwansDown, $isRounded: true);
}
:host(.--green-rounded--w100) {
    @include button(colors.$HunterGreen, colors.$SwansDown, 100%, true);
}
:host(.--green-rounded--active) {
    .button {
        color: colors.$SwansDown;
        background-color: colors.$HunterGreen;
        border-radius: 20px;
        padding: 10px 20px;
        width: fit-content;
    }
}

:host(.--yellow) {
    @include button(colors.$Hacienda, colors.$Picasso);
}
:host(.--yellow--w100) {
    @include button(colors.$Hacienda, colors.$Picasso, 100%);
}
